name: Build Test Generate

on:
  pull_request:
  push:
    paths:
      - '**.cs'
      - '**.csproj'

env:
  DOTNET_VERSION: '9.0.200' # The .NET SDK version to use

jobs:
  build-generate-test:

    name: build-generate-test
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore
        
      - name: Generator Tests
        working-directory: test/Xunit.Categories.Generator.Test/
        run: dotnet test 

      - name: Generate and move
        working-directory: src/Xunit.Categories.Generator
        run: |
          dotnet run
          pwd
          cp -a ./output/Xunit.Categories/. ../Xunit.Categories/
          cp -a ./output/Xunit.Categories.Test/. ../../test/Xunit.Categories.Test/
          rm -r ./output
      
      - name: Category Tests
        working-directory: ./test/Xunit.Categories.Test/
        run: dotnet test --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --logger trx;LogFileName=test-results.trx 
      - name: Combine Coverage Reports # This is because one report is produced per project, and we want one result for all of them.
        uses: danielpalme/ReportGenerator-GitHub-Action@v5.4.3
        with:
          reports: "**/*.cobertura.xml" # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
          targetdir: "${{ github.workspace }}" # REQUIRED # The directory where the generated report should be saved.
          reporttypes: "Cobertura" # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary
          verbosity: "Info" # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
          title: "Code Coverage" # Optional title.
          tag: "${{ github.run_number }}_${{ github.run_id }}" # Optional tag or build version.
          customSettings: "" # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
          toolpath: "reportgeneratortool" # Default directory for installing the dotnet tool.
      - name: Upload Combined Coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ${{ github.workspace }}/Cobertura.xml
          retention-days: 5
      - name: Publish Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "Cobertura.xml"
          badge: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "10 30"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Upload Test Result Files
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ github.workspace }}/**/TestResults/**/*
          retention-days: 5

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.18.0
        if: always()
        with:
          # NOTE: using trx_files instead of files due to https://github.com/EnricoMi/publish-unit-test-result-action/issues/424
          trx_files: "${{ github.workspace }}/**/*.trx"

      - name: Commit Generated Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: adding generated files
          file_pattern: '*.cs'

      - name: chilli p
        run: find .